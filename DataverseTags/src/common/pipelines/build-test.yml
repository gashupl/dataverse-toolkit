# Pipeline for building DataverseTag solution (including code extensions)

trigger:
  branches:
    include:
    - '*'

name: '$(Build.SourceBranchName).$(Build.BuildId)'

pool:
  vmImage: 'windows-latest'

variables:
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'
- name: version
  value: '1.0.1.$(Build.BuildId)'
- name: pcfVersion
  value: '1.0.$(Build.BuildId)'

steps:
- task: CmdLine@2
  displayName: Install TypeScript compiler
  inputs:
    script: 'npm install --save-dev typescript'

- task: PowerPlatformToolInstaller@0
  displayName: Install Power Platform Tools (Including CLI) 
  inputs:
    DefaultVersion: true

- task: MSCRMToolInstaller@12
  inputs:
    nugetFeed: 'official'
    psFeed: 'official'


- task: PowerShell@2
  displayName: Update DataverseTags solution version (unmanaged)
  inputs:
    targetType: 'inline'
    script: |
        $solutionFullPath = "solutions/DataverseTags/src/Other/Solution.xml"
        $solutionXml = New-Object System.Xml.XmlDocument
        $solutionXml.PreserveWhitespace = $true
        $solutionXml.Load($solutionFullPath)
        $solutionXml.SelectSingleNode("/ImportExportXml/SolutionManifest/Version").'#text' = '$(version)'
        $solutionXml.OuterXml | Out-File -FilePath $solutionFullPath -Encoding utf8 -NoNewline  

- task: PowerShell@2
  displayName: Update DataverseTags solution version (managed)
  inputs:
    targetType: 'inline'
    script: |
        $solutionFullPath = "DataverseTags/solutions/DataverseTags_managed/src/Other/Solution.xml"
        $solutionXml = New-Object System.Xml.XmlDocument
        $solutionXml.PreserveWhitespace = $true
        $solutionXml.Load($solutionFullPath)
        $solutionXml.SelectSingleNode("/ImportExportXml/SolutionManifest/Version").'#text' = '$(version)'
        $solutionXml.OuterXml | Out-File -FilePath $solutionFullPath -Encoding utf8 -NoNewline 

- task: PowerShell@2
  displayName: Update DataverseTags control version in manifest
  inputs:
    targetType: 'inline'
    script: |
        $solutionFullPath = "DataverseTags/src/frontend/Pg.DataverseTags/DataverseTags/ControlManifest.Input.xml"
        $solutionXml = New-Object System.Xml.XmlDocument
        $solutionXml.PreserveWhitespace = $true
        $solutionXml.Load($solutionFullPath)
        $nodes = $solutionXml.SelectNodes("/manifest/control"); 
        foreach($node in $nodes) {
            $node.SetAttribute("version", "$(pcfVersion)");
        }
        $solutionXml.OuterXml | Out-File -FilePath $solutionFullPath -Encoding utf8 -NoNewline  

- task: MSCRMPackSolution@12
  displayName: Pack managed solution
  inputs:
    unpackedFilesFolder: 'DataverseTags/solutions/DataverseTags_managed/src'
    packageType: 'Managed'
    includeVersionInSolutionFile: false
    outputPath: '$(Build.ArtifactStagingDirectory)/solutions'

- task: MSCRMPackSolution@12
  displayName: Pack unmanaged solution
  inputs:
    unpackedFilesFolder: 'DataverseTags/solutions/DataverseTags/src'
    includeVersionInSolutionFile: false
    outputPath: '$(Build.ArtifactStagingDirectory)/solutions'

# DataverseTags control related steps - start
- task: Npm@1
  displayName: Install missing NPM packages for Demo PCF Control
  inputs:
    workingDir: 'DataverseTags/src/frontend/Pg.DataverseTags/DataverseTags/'
    customCommand: 'install --prefer-offline --no-audit --unsafe-perm=true'

- task: Npm@1
  displayName: Build DataverseTags Control
  inputs:
    command: 'custom'
    workingDir: 'DataverseTags/src/frontend/Pg.DataverseTags/DataverseTags/'
    customCommand: 'run build'
# DataverseTags control related steps - end

- task: PowerShell@2
  displayName: Create solution with MSBuild
  inputs:
    targetType: 'inline'
    script: '& "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" /t:build /restore /p:configuration=Release'
    workingDirectory: 'DataverseTags/solutions/DataverseTagsControls'

- task: CopyFiles@2
  displayName: Copy DataverseTags control solutions to artifact folder
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/DataverseTags/solutions/DataverseTagsControls/bin/Release/'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/solutions'

- task: PublishBuildArtifacts@1
  displayName: Publish build artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'DataverseSolutionArtifact'